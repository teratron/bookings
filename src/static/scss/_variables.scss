@use "sass:math";
@use "sass:list";
@use "sass:meta";

// Root
$unit: 1.25rem; // 20px
$px: 0.0625rem;
$rate-horizontal: 0.8;
$rate-vertical: 0.8;

// Grid
$grid-column: 12;
$grid-width: $unit * 60; // 1200px
$grid-gap: $unit * 2; // 40px
$grid-row-height: $unit * 2;
$grid-col-width: math.div($grid-width, $grid-column);
$grid-cell-height: $unit;
$grid-cell-width: math.div($grid-width - ($grid-column - 1) * $grid-gap, $grid-column);

// Layout
$layout-gap: $unit * 2; // 40px
$layout-gaps: $layout-gap * 2;
$layout-width: $grid-width + $layout-gaps;
$layout-width-min: $unit * 18; // 360px

// Calculated variables
$rate: math.div(100vw, $layout-width); // if($layout-width > 0, math.div(100vw, $layout-width), 0);
$grid-gap-adaptive: $rate * $grid-gap;
$layout-gap-adaptive: $rate * $layout-gap;

// List breakpoints
@function getListBreakpoints() {
    $list: [];
    $b: math.div(100, $layout-width) * $layout-gaps;
    $g: 100 - $b;

    @for $i from 1 through $grid-column {
        $w: $i * $grid-col-width;
        $s: math.div($w, $g) * $b;
        $d: $w + $s - $px;
        $list: list.append($list, $d);
    }

    @return $list;
}

$list-breakpoints: getListBreakpoints();

:root {
    /* Debug */
    --d1: #{$list-breakpoints};
    --d2: #{list.length($list-breakpoints)};
    --d3: #{list.nth($list-breakpoints, $grid-column)};

    /* App */
    //--app-header-height: #{$header-height};
    //--app-footer-height: #{$footer-height};
    //--app-main-height: #{$main-height};

    /* Theme */
    @include app-theme;
}
