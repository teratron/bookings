@use "sass:math";
@use "sass:list";
@use "sass:meta";

$unit: 20px;

// Layout
$layout-width: $unit * 64; // 1280px
$layout-width-min: $unit * 18; // 360px
$layout-gap: $unit * 2; // 40px

// Grid
$grid-column: 12;
$grid-gap: $unit * 2; // 40px

// App
$header-height: $unit * 5; // 96px
$footer-height: $unit * 11; // 220px
$main-height: $unit * 11; // 220px
$border-radius: .35rem;

// Calculated variables
$rate: math.div(100vw, $layout-width);
$layout-gap-adaptive: $rate * $layout-gap;
$grid-gap-adaptive: $rate * $grid-gap;
$grid-width: $layout-width - 2 * $layout-gap;
$grid-step: math.round(math.div(($grid-width - $layout-width-min), $grid-column));
$cell-width: math.round(math.div($grid-width, $grid-column));

// Breakpoints
@function get-list-breakpoint() {
    $list: [];
    $r: math.div(100px, $layout-width); // rate (px)
    $b: 2 * $r * $layout-gap; // 2 * width layout gap
    $g: 100px - $b; // width grid (%)

    @for $i from 1 through $grid-column {
        $w: $i * $cell-width; // width grid (px)
        $s: math.div($w, $g) * $b; // 2 * width layout gap
        $d: math.round($w + $s) - 1; // breakpoint
        $list: list.append($list, $d);
    }

    @return $list;
}

$list-breakpoint: get-list-breakpoint();

:root {
    /* Debug */
    --d1: #{get-list-breakpoint()};
    --d2: #{list.length(get-list-breakpoint())};
    --d3: #{list.nth(get-list-breakpoint(), 3)};

    /* Layout */
    --app-header-height: #{$header-height};
    --app-footer-height: #{$footer-height};
    --app-main-height: #{$main-height};

    /* Theme */
    @include app-theme;
}