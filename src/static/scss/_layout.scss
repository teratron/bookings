@use "sass:math";
@use "sass:list";
@use "sass:string";

// Layout
.layout {
    width: 100%;
    max-width: $layout-width;
    margin-left: auto;
    margin-right: auto;

    @if $layout-gap >0 {
        padding-left: $layout-gap;
        padding-right: $layout-gap;
        @extend %layout-gap-adaptive;
    }
}

// Grid
.grid {
    display: grid;
}

%grid {
    @extend .grid;
    grid-auto-flow: dense;

    @if $grid-gap >0 {
        grid-gap: $grid-gap;
        @extend %grid-gap-adaptive;
    }
}

%span {
    width: auto;
    max-width: none;
}

@for $i from 1 through $grid-column {
    .grid-#{$i} {
        grid-template-columns: repeat($i, 1fr);
        @extend %grid;
    }

    .grid-#{$i},
    .span-#{$i} {
        grid-column: span $i;
    }

    .span-#{$i} {
        @extend %span;
    }
}

// Breakpoint
@media only screen and (max-width: $layout-width - 1) {
    %layout-gap-adaptive {
        margin-left: 0;
        margin-right: 0;
        padding-left: $layout-gap-adaptive;
        padding-right: $layout-gap-adaptive;
    }

    %grid-gap-adaptive {
        grid-gap: $grid-gap-adaptive;
    }
}

// Shrink
.shrink {
    grid-gap: 0;
}

@for $i from list.length($cell-list-width) to 0 {
    $b: list.nth($cell-list-width, $i) /*- 2 * $layout-gap*/
;
    $k: $i - 1;

    @if $b >= $layout-width-min {
        @media only screen and (max-width: $b) {
            .shrink {
                &,
                > %grid-#{$i},
                > %span-#{$i} {
                    grid-template-columns: repeat($k, 1fr);
                }

                > %grid-#{$i},
                > %span-#{$i} {
                    grid-column: span $k;
                }
            }

            @for $j from $i through $grid-column {
                .grid-#{$j} {
                    @extend %grid-#{$i};
                }

                .span-#{$j} {
                    @extend %span-#{$i};
                }
            }
        }
    }
}

@mixin name($props) {
    @each $key, $value in $props {
        #{$key}: $value;
    }
}