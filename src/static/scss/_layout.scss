// Layout
.layout {
    width: 100%;
    max-width: $layout_width;
    margin-left: auto;
    margin-right: auto;

    @include setPropsAdaptive(
        (
            padding-left: $layout_gap,
            padding-right: $layout_gap,
        )
    );
}

// Grid
.grid {
    display: grid;
}

%grid {
    @extend .grid;
    grid-auto-flow: dense;
    grid-auto-rows: minmax($grid_cell_height, auto);

    @include setPropsAdaptive(
        (
            grid-gap: $grid_gap,
        )
    );
}

%col {
    width: auto;
    max-width: none;
}

@for $i from 1 through $grid_column {
    .grid-#{$i} {
        grid-template-columns: repeat($i, 1fr);
        @extend %grid;
    }

    .col-#{$i},
    .grid-#{$i},
    .grid-#{$i} > .col {
        grid-column: span $i;
    }

    .col,
    .col-#{$i} {
        @extend %col;
    }

    .span-#{$i} {
        grid-column-start: $i;
    }
}

// Shrink
@for $i from $grid_column to 1 {
    $k: $i - 1;
    $b: getBreakpoint($k);

    @if $b >= $layout-width-min {
        @media only screen and (max-width: $b) {
            .shrink {
                &,
                > %grid-#{$i} {
                    grid-template-columns: repeat($k, 1fr);
                }

                > %col-#{$i},
                > .grid-#{$i} > .col {
                    grid-column: span $k;
                }
            }

            @for $j from $i through $grid_column {
                .col-#{$j},
                .grid-#{$j} {
                    @extend %col-#{$i};
                    @extend %grid-#{$i};
                }
            }
        }
    }
}

// Spread/extend
